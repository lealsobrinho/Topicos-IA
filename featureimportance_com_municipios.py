# -*- coding: utf-8 -*-
"""FeatureImportance-com-municipios.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jlbh9Q149ZYTR1bieg8JDPDvOAuTbMlK

Exemplo Featureimportance - Antonio Leal
"""

pip install eli5

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.ensemble import RandomForestClassifier
import eli5
from eli5 import show_prediction
from sklearn.metrics import accuracy_score

# Lê o arquivo CSV 'dados-municipios.csv' e armazena os dados em um DataFrame chamado 'fiscaliza'
fiscaliza = pd.read_csv('/content/dados-municipios.csv')
previsores = fiscaliza.iloc[:,0:8].values
classe = fiscaliza.iloc[:,8].values

fiscaliza.head(184)

fiscaliza['fiscalizar'].value_counts()

# cria uma instancia do labelencoder
# transforma cluna 'localidade' em número
labelencoder = LabelEncoder()
previsores[:,1] = labelencoder.fit_transform(previsores[:,1])

# divide os dados em conjuntos de treinamento e teste
X_treinamento, X_teste, y_treinamento, y_teste = train_test_split(previsores,
                                                                  classe,
                                                                  test_size = 0.3,
                                                                  random_state = 0)

# Cria uma instância do modelo Random Forest com 100 árvores (estimadores) e treina o modelo
modelo = RandomForestClassifier(n_estimators = 100)
modelo.fit(X_treinamento, y_treinamento)

acuracia = accuracy_score(y_teste, modelo.predict(X_teste))
print(f'Acurácia do modelo é: {acuracia}')

#mostra a importância global
eli5.show_weights(modelo, feature_names = list(fiscaliza)[0:8])

#(Crato)
previsores[50]

# explicação previsão, local
eli5.show_prediction(modelo,previsores[50], feature_names = list(fiscaliza)[0:8],  show_feature_values=True)

